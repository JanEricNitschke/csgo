# python wrapper for package github.com/pnxenopoulos/awpygo within overall package awpygo
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy.exe pkg -output=awpygo -vm=python github.com/pnxenopoulos/awpygo

# the following is required to enable dlopen to open the _go.so file
import collections
import inspect
import os

try:
    import collections.abc as _collections_abc
except ImportError:
    _collections_abc = collections

cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
from . import _awpygo

os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# and then refer to everything using awpygo. prefix
# packages imported by this package listed below:


# ---- Types ---


# ---- Enums from Go (collections of consts with same type) ---


# ---- Constants from Go: Python can only ask that you please don't change these! ---


# ---- Global Variables: can only use functions to access ---


# ---- Interfaces ---


# ---- Structs ---


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---


# ---- Functions ---
def ParseDemo(
    demPath,
    demoID,
    parseRate,
    parseFrames,
    parseKillFrames,
    tradeTime,
    roundBuyStyle,
    damagesRolled,
    jsonIndentation,
    parseChat,
    outpath,
    goRun=False,
):
    """ParseDemo(str demPath, str demoID, int parseRate, bool parseFrames, bool parseKillFrames, long tradeTime, str roundBuyStyle, bool damagesRolled, bool jsonIndentation, bool parseChat, str outpath)."""
    _awpygo.awpygo_ParseDemo(
        demPath,
        demoID,
        parseRate,
        parseFrames,
        parseKillFrames,
        tradeTime,
        roundBuyStyle,
        damagesRolled,
        jsonIndentation,
        parseChat,
        outpath,
        goRun,
    )
